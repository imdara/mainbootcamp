Question -
a)//fix the code to get the largest of three
aa = (f,s,t) => {
 let f,s,t;
 console.log(f,s,t);
 if(f>s &&f>t){
 console.log(f)}
 else if(s>f && s>t){
 console.log(s)}
 else{
 console.log(t)}
}
aa(1,2,3);
Answer -
aa = (f,s,t) => {
  if(f>s && f>t){
  console.log(f)}
  else if(s>f && s>t){
  console.log(s)}
  else{
  console.log(t)}
 }
 aa(1,2,3);
//Output: 3

b)//fix the code for sum of the digits present in the number
let n = 123;
console.log(add(n));
function add(n)
{
let sum = 10;
for(var i=0;i<n.length;i++){
 sum+=n[i]
 }
 return sum;
}
Answer -
let n = 123;
console.log(add(n));
function add(n)
{
let sum = 0;
n=String(n).split("");
for(var i=0;i<n.length;i++){
 sum+= +n[i];
 }
 return sum;
}
//Output: 6

c)//fix the code for sum using iife
const arr = [9,8,5,6,4,3,2,1];
(function() {
 let sum = 0;
 for (var i = 0; i <= arr.length; i++);{
 sum += arr[i];
 }
 console.log(sum);
 return sum;
})();
Answer -
const arr = [9,8,5,6,4,3,2,1];
(function(arr) {
 let sum = 0;
 for (var i = 0; i < arr.length; i++){
 sum += arr[i];
 }
 console.log(sum);
})(arr);
//Output: 38

d)//fix the code to gen titlecaps
var arr = [“guvi”, “geek”, “zen”, “fullstack”];
var ano = function(arro) {
 for (var i = 0; i <= arro.length; i++) {
 console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
 }
}
ano();
Answer -
var arr = ['guvi', 'geek', 'zen', 'fullstack'];
var ano = function(arro) {
 for (var i = 0; i < arro.length; i++) {
 console.log(arro[i][0].toUpperCase() + arro[i].substr(1));
 }
}
ano(arr);

// Output: Guvi
// Geek
// Zen
// Fullstack

e)//fix the code to print prime numbers
const newArray=[1,3,2,5,10];
const myPrime=newArray.filter(num=>{
 for(let i=2;i<=num;i++){
 if(num%i===0)
 {
 return true;
 }
 }
 return num===1;
});
console.log(myPrime);
Answer -
const newArray=[1,3,2,5,10];
const myPrime=newArray.filter(num=>{
  let i;
 for(i=2;i<num;i++){
 if(num%i===0)
 {
  break;
 }
}
 if (i==num)
 {
  return num;
 }
});
console.log(myPrime);
//Output: [ 3, 2, 5 ]

f)//fix the code to sum the number in that array
const num = [10, 20, 30, 40,50,60,70,80,90,100] 
const sum = (a, b) =>
 a + b
const sum = num.reduce(sum)
console.log(sum);
Answer -
const num = [10, 20, 30, 40,50,60,70,80,90,100] 
const sum = (a, b) => {
return a + b; 
}
console.log(num.reduce(sum));
//Output: 550

g)//Fix the code to rotate an array by k times and return rotated array using IIFE function
var arr = [1, 2, 3, 6, 8, 6, 1, 9, 10, 12, 13];
var k = 3;
k = arr.length % k;
(function() {
 arr = {};
 out = arr.slice(k + 1, arr.length);
 var count = out.length;
 for (var i = 0; i < k + 1; i++) {
 out[count] = arr[i];
 count += 1;
 }
 console.log(out);})();
Answer -
var arr = [1, 2, 3, 6, 8, 6, 1, 9, 10, 12, 13];
var k = 3;
k = arr.length % k;
(function(arr) {
 out = arr.slice(k + 1, arr.length);
 var count = out.length;
 for (var i = 0; i < k + 1; i++) {
 out[count] = arr[i];
 count += 1;
 }
 console.log(out);})(arr);
//Output: [ 6, 8, 6, 1, 9, 10, 12, 13, 1, 2, 3 ]

h)//

Answer -

i)//

Answer -

j)//

Answer -

k)//

Answer -

l)//

Answer -

m)//
Answer -

n)//

Answer -

